import com.diskuv.dksdk.core.gradle.tasks.CMakeConfigureWithJniTask

buildscript {
    repositories {
        mavenLocal {
            content {
                // Only use machine-local Maven repository for DkSDK group of artifacts
                includeGroup "com.diskuv.dksdk.core"
            }
        }
    }
    dependencies {
        classpath 'com.diskuv.dksdk.core:gradle:1.0.0-SNAPSHOT'
    }
}

plugins {
    id 'com.android.library'
}
apply plugin: com.diskuv.dksdk.core.gradle.plugins.CMakeEnvironmentPlugin

tasks.register('cmakeConfigureTemplate', CMakeConfigureWithJniTask) {
    def jniCompiler = javaToolchains.compilerFor {
        // Avoid: androidx/activity/lint/ActivityIssueRegistry has been compiled by a more recent version of the Java Runtime (class file version 61.0), this version of the Java Runtime only recognizes class file versions up to 55.0
        languageVersion = JavaLanguageVersion.of(17)
    }

    template true
    androidGradlePlugin true
    jdkHome = jniCompiler.map { it.metadata.installationPath }
    defaultFetchContentDksdkAccess = rootProject.file("fetch/dksdk-access")
    defaultFetchContentDksdkCmake = rootProject.file("fetch/dksdk-cmake")
    defaultFetchContentDksdkFfiC = rootProject.file("fetch/dksdk-ffi-c")
    defaultFetchContentDksdkFfiJava = rootProject.file("fetch/dksdk-ffi-java")

    sources fileTree(
            dir: rootDir,
            includes: [
                    "CMakeLists.txt",
                    "dependencies/**/CMakeLists.txt",
                    "data/**/CMakeLists.txt"
            ]
    )
}

android {
    namespace 'com.example.squirrelscout.data'

    // Note that updating a library or application's compileSdkVersion (which
    // allows newer APIs to be used) can be done separately from updating
    // targetSdkVersion (which opts the app in to new runtime behavior) and
    // minSdkVersion (which determines which devices the app can be installed on).

    compileSdk 33

    defaultConfig {
        minSdk 14
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        externalNativeBuild {
            cmake {
                cppFlags ""
                arguments cmakeConfigureTemplate.cmakeArgumentArray
                targets "datalib"
            }
            ndk {
                // DkSDK supports: android_x86_64, android_arm32v7a, android_arm64v8a
                abiFilters /*'x86',*/ 'x86_64', /*'armeabi',*/ 'armeabi-v7a', 'arm64-v8a'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path project.rootProject.file("CMakeLists.txt")
            version cmakeEnvironment.version
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}