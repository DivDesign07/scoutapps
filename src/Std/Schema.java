// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: schema.capnp

package com.example.squirrelscout.data.capnp;

public final class Schema {
  public static class RawMatchData {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)5,(short)3);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return RawMatchData.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final short getTeamNumber() {
        return _getShortField(0);
      }
      public final void setTeamNumber(short value) {
        _setShortField(0, value);
      }

      public final boolean hasTeamName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getTeamName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setTeamName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setTeamName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initTeamName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final short getMatchNumber() {
        return _getShortField(1);
      }
      public final void setMatchNumber(short value) {
        _setShortField(1, value);
      }

      public final boolean hasScouterName() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.Text.Builder getScouterName() {
        return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
      }
      public final void setScouterName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 1, value);
      }
      public final void setScouterName(String value) {
        _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initScouterName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 1, size);
      }
      public final boolean getIncap() {
        return _getBooleanField(32);
      }
      public final void setIncap(boolean value) {
        _setBooleanField(32, value);
      }

      public final boolean getPlayingDefense() {
        return _getBooleanField(33);
      }
      public final void setPlayingDefense(boolean value) {
        _setBooleanField(33, value);
      }

      public final boolean hasNotes() {
        return !_pointerFieldIsNull(2);
      }
      public final org.capnproto.Text.Builder getNotes() {
        return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
      }
      public final void setNotes(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 2, value);
      }
      public final void setNotes(String value) {
        _setPointerField(org.capnproto.Text.factory, 2, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initNotes(int size) {
        return _initPointerField(org.capnproto.Text.factory, 2, size);
      }
      public final boolean getAutoMobility() {
        return _getBooleanField(34);
      }
      public final void setAutoMobility(boolean value) {
        _setBooleanField(34, value);
      }

      public final com.example.squirrelscout.data.capnp.Schema.Climb getAutoClimb() {
        switch(_getShortField(3)) {
          case 0 : return com.example.squirrelscout.data.capnp.Schema.Climb.NONE;
          case 1 : return com.example.squirrelscout.data.capnp.Schema.Climb.DOCKED;
          case 2 : return com.example.squirrelscout.data.capnp.Schema.Climb.ENGAGED;
          default: return com.example.squirrelscout.data.capnp.Schema.Climb._NOT_IN_SCHEMA;
        }
      }
      public final void setAutoClimb(com.example.squirrelscout.data.capnp.Schema.Climb value) {
        _setShortField(3, (short)value.ordinal());
      }

      public final short getAutoConeHigh() {
        return _getShortField(4);
      }
      public final void setAutoConeHigh(short value) {
        _setShortField(4, value);
      }

      public final short getAutoConeMid() {
        return _getShortField(5);
      }
      public final void setAutoConeMid(short value) {
        _setShortField(5, value);
      }

      public final short getAutoConeLow() {
        return _getShortField(6);
      }
      public final void setAutoConeLow(short value) {
        _setShortField(6, value);
      }

      public final short getAutoCubeHigh() {
        return _getShortField(7);
      }
      public final void setAutoCubeHigh(short value) {
        _setShortField(7, value);
      }

      public final short getAutoCubeMid() {
        return _getShortField(8);
      }
      public final void setAutoCubeMid(short value) {
        _setShortField(8, value);
      }

      public final short getAutoCubeLow() {
        return _getShortField(9);
      }
      public final void setAutoCubeLow(short value) {
        _setShortField(9, value);
      }

      public final com.example.squirrelscout.data.capnp.Schema.Climb getTeleClimb() {
        switch(_getShortField(10)) {
          case 0 : return com.example.squirrelscout.data.capnp.Schema.Climb.NONE;
          case 1 : return com.example.squirrelscout.data.capnp.Schema.Climb.DOCKED;
          case 2 : return com.example.squirrelscout.data.capnp.Schema.Climb.ENGAGED;
          default: return com.example.squirrelscout.data.capnp.Schema.Climb._NOT_IN_SCHEMA;
        }
      }
      public final void setTeleClimb(com.example.squirrelscout.data.capnp.Schema.Climb value) {
        _setShortField(10, (short)value.ordinal());
      }

      public final short getTeleConeHigh() {
        return _getShortField(11);
      }
      public final void setTeleConeHigh(short value) {
        _setShortField(11, value);
      }

      public final short getTeleConeMid() {
        return _getShortField(12);
      }
      public final void setTeleConeMid(short value) {
        _setShortField(12, value);
      }

      public final short getTeleConeLow() {
        return _getShortField(13);
      }
      public final void setTeleConeLow(short value) {
        _setShortField(13, value);
      }

      public final short getTeleCubeHigh() {
        return _getShortField(14);
      }
      public final void setTeleCubeHigh(short value) {
        _setShortField(14, value);
      }

      public final short getTeleCubeMid() {
        return _getShortField(15);
      }
      public final void setTeleCubeMid(short value) {
        _setShortField(15, value);
      }

      public final short getTeleCubeLow() {
        return _getShortField(16);
      }
      public final void setTeleCubeLow(short value) {
        _setShortField(16, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final short getTeamNumber() {
        return _getShortField(0);
      }

      public boolean hasTeamName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getTeamName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public final short getMatchNumber() {
        return _getShortField(1);
      }

      public boolean hasScouterName() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.Text.Reader getScouterName() {
        return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
      }

      public final boolean getIncap() {
        return _getBooleanField(32);
      }

      public final boolean getPlayingDefense() {
        return _getBooleanField(33);
      }

      public boolean hasNotes() {
        return !_pointerFieldIsNull(2);
      }
      public org.capnproto.Text.Reader getNotes() {
        return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
      }

      public final boolean getAutoMobility() {
        return _getBooleanField(34);
      }

      public final com.example.squirrelscout.data.capnp.Schema.Climb getAutoClimb() {
        switch(_getShortField(3)) {
          case 0 : return com.example.squirrelscout.data.capnp.Schema.Climb.NONE;
          case 1 : return com.example.squirrelscout.data.capnp.Schema.Climb.DOCKED;
          case 2 : return com.example.squirrelscout.data.capnp.Schema.Climb.ENGAGED;
          default: return com.example.squirrelscout.data.capnp.Schema.Climb._NOT_IN_SCHEMA;
        }
      }

      public final short getAutoConeHigh() {
        return _getShortField(4);
      }

      public final short getAutoConeMid() {
        return _getShortField(5);
      }

      public final short getAutoConeLow() {
        return _getShortField(6);
      }

      public final short getAutoCubeHigh() {
        return _getShortField(7);
      }

      public final short getAutoCubeMid() {
        return _getShortField(8);
      }

      public final short getAutoCubeLow() {
        return _getShortField(9);
      }

      public final com.example.squirrelscout.data.capnp.Schema.Climb getTeleClimb() {
        switch(_getShortField(10)) {
          case 0 : return com.example.squirrelscout.data.capnp.Schema.Climb.NONE;
          case 1 : return com.example.squirrelscout.data.capnp.Schema.Climb.DOCKED;
          case 2 : return com.example.squirrelscout.data.capnp.Schema.Climb.ENGAGED;
          default: return com.example.squirrelscout.data.capnp.Schema.Climb._NOT_IN_SCHEMA;
        }
      }

      public final short getTeleConeHigh() {
        return _getShortField(11);
      }

      public final short getTeleConeMid() {
        return _getShortField(12);
      }

      public final short getTeleConeLow() {
        return _getShortField(13);
      }

      public final short getTeleCubeHigh() {
        return _getShortField(14);
      }

      public final short getTeleCubeMid() {
        return _getShortField(15);
      }

      public final short getTeleCubeLow() {
        return _getShortField(16);
      }

    }

  }


  public enum Climb {
    NONE,
    DOCKED,
    ENGAGED,
    _NOT_IN_SCHEMA,
  }

  public enum RobotPosition {
    RED1,
    RED2,
    RED3,
    BLUE1,
    BLUE2,
    BLUE3,
    _NOT_IN_SCHEMA,
  }

  public static class MatchAndPosition {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return MatchAndPosition.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final short getMatch() {
        return _getShortField(0);
      }
      public final void setMatch(short value) {
        _setShortField(0, value);
      }

      public final com.example.squirrelscout.data.capnp.Schema.RobotPosition getPosition() {
        switch(_getShortField(1)) {
          case 0 : return com.example.squirrelscout.data.capnp.Schema.RobotPosition.RED1;
          case 1 : return com.example.squirrelscout.data.capnp.Schema.RobotPosition.RED2;
          case 2 : return com.example.squirrelscout.data.capnp.Schema.RobotPosition.RED3;
          case 3 : return com.example.squirrelscout.data.capnp.Schema.RobotPosition.BLUE1;
          case 4 : return com.example.squirrelscout.data.capnp.Schema.RobotPosition.BLUE2;
          case 5 : return com.example.squirrelscout.data.capnp.Schema.RobotPosition.BLUE3;
          default: return com.example.squirrelscout.data.capnp.Schema.RobotPosition._NOT_IN_SCHEMA;
        }
      }
      public final void setPosition(com.example.squirrelscout.data.capnp.Schema.RobotPosition value) {
        _setShortField(1, (short)value.ordinal());
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final short getMatch() {
        return _getShortField(0);
      }

      public final com.example.squirrelscout.data.capnp.Schema.RobotPosition getPosition() {
        switch(_getShortField(1)) {
          case 0 : return com.example.squirrelscout.data.capnp.Schema.RobotPosition.RED1;
          case 1 : return com.example.squirrelscout.data.capnp.Schema.RobotPosition.RED2;
          case 2 : return com.example.squirrelscout.data.capnp.Schema.RobotPosition.RED3;
          case 3 : return com.example.squirrelscout.data.capnp.Schema.RobotPosition.BLUE1;
          case 4 : return com.example.squirrelscout.data.capnp.Schema.RobotPosition.BLUE2;
          case 5 : return com.example.squirrelscout.data.capnp.Schema.RobotPosition.BLUE3;
          default: return com.example.squirrelscout.data.capnp.Schema.RobotPosition._NOT_IN_SCHEMA;
        }
      }

    }

  }


  public static class MaybeError {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return MaybeError.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean getSuccess() {
        return _getBooleanField(0);
      }
      public final void setSuccess(boolean value) {
        _setBooleanField(0, value);
      }

      public final boolean hasMessageIfError() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getMessageIfError() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setMessageIfError(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setMessageIfError(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initMessageIfError(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final boolean getSuccess() {
        return _getBooleanField(0);
      }

      public boolean hasMessageIfError() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getMessageIfError() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

    }

  }



public static final class Schemas {
public static final org.capnproto.SegmentReader b_faef7bb13948ce39 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0039\u00ce\u0048\u0039\u00b1\u007b\u00ef\u00fa" +
   "\r\u0000\u0000\u0000\u0001\u0000\u0005\u0000" +
   "\u006f\u005a\u004b\u009d\u00a1\u001f\u0004\u00ff" +
   "\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00d2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00d7\u0004\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0063\u0068\u0065\u006d\u0061\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u0052\u0061\u0077" +
   "\u004d\u0061\u0074\u0063\u0068\u0044\u0061\u0074" +
   "\u0061\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0059\u0002\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0058\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0064\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0002\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0060\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u006c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0002\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0068\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0002\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u007c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0020\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0079\u0002\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0080\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\u0021\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007d\u0002\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007c\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0088\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0085\u0002\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0080\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u008c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0089\u0002\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0088\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0094\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0091\u0002\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0090\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u009c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0009\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0009\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0099\u0002\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0098\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a4\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\n\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\n\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a1\u0002\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a0\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ac\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000b\u0000\u0000\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000b\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a9\u0002\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a8\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b4\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000c\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b1\u0002\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b0\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00bc\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\r\u0000\u0000\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\r\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u0002\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b8\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c4\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000e\u0000\u0000\u0000\u0009\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000e\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c1\u0002\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c0\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00cc\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000f\u0000\u0000\u0000\n\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c9\u0002\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c8\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d4\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u000b\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0010\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d1\u0002\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d0\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00dc\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0011\u0000\u0000\u0000\u000c\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0011\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d9\u0002\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d8\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00e4\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0012\u0000\u0000\u0000\r\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e1\u0002\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e0\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ec\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0013\u0000\u0000\u0000\u000e\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0013\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e9\u0002\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e8\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f4\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u000f\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0014\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f1\u0002\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f0\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00fc\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0015\u0000\u0000\u0000\u0010\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0015\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f9\u0002\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f8\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0004\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0065\u0061\u006d\u004e\u0075\u006d\u0062" +
   "\u0065\u0072\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0061\u006d\u004e\u0061\u006d\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006d\u0061\u0074\u0063\u0068\u004e\u0075\u006d" +
   "\u0062\u0065\u0072\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0063\u006f\u0075\u0074\u0065\u0072\u004e" +
   "\u0061\u006d\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0063\u0061\u0070\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u006c\u0061\u0079\u0069\u006e\u0067\u0044" +
   "\u0065\u0066\u0065\u006e\u0073\u0065\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006e\u006f\u0074\u0065\u0073\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0075\u0074\u006f\u004d\u006f\u0062\u0069" +
   "\u006c\u0069\u0074\u0079\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0075\u0074\u006f\u0043\u006c\u0069\u006d" +
   "\u0062\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u001d\u00f0\u0041\u000c\u00b5\u00bf\u00ec" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0075\u0074\u006f\u0043\u006f\u006e\u0065" +
   "\u0048\u0069\u0067\u0068\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0075\u0074\u006f\u0043\u006f\u006e\u0065" +
   "\u004d\u0069\u0064\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0075\u0074\u006f\u0043\u006f\u006e\u0065" +
   "\u004c\u006f\u0077\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0075\u0074\u006f\u0043\u0075\u0062\u0065" +
   "\u0048\u0069\u0067\u0068\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0075\u0074\u006f\u0043\u0075\u0062\u0065" +
   "\u004d\u0069\u0064\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0075\u0074\u006f\u0043\u0075\u0062\u0065" +
   "\u004c\u006f\u0077\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u006c\u0065\u0043\u006c\u0069\u006d" +
   "\u0062\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u001d\u00f0\u0041\u000c\u00b5\u00bf\u00ec" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u006c\u0065\u0043\u006f\u006e\u0065" +
   "\u0048\u0069\u0067\u0068\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u006c\u0065\u0043\u006f\u006e\u0065" +
   "\u004d\u0069\u0064\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u006c\u0065\u0043\u006f\u006e\u0065" +
   "\u004c\u006f\u0077\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u006c\u0065\u0043\u0075\u0062\u0065" +
   "\u0048\u0069\u0067\u0068\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u006c\u0065\u0043\u0075\u0062\u0065" +
   "\u004d\u0069\u0064\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u006c\u0065\u0043\u0075\u0062\u0065" +
   "\u004c\u006f\u0077\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ecbfb50c41f01d69 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0069\u001d\u00f0\u0041\u000c\u00b5\u00bf\u00ec" +
   "\r\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u006f\u005a\u004b\u009d\u00a1\u001f\u0004\u00ff" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u009a\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u004f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0063\u0068\u0065\u006d\u0061\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u0043\u006c\u0069" +
   "\u006d\u0062\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006e\u006f\u006e\u0065\u0000\u0000\u0000\u0000" +
   "\u0064\u006f\u0063\u006b\u0065\u0064\u0000\u0000" +
   "\u0065\u006e\u0067\u0061\u0067\u0065\u0064\u0000" + "");
public static final org.capnproto.SegmentReader b_e6967687b5d97f36 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0036\u007f\u00d9\u00b5\u0087\u0076\u0096\u00e6" +
   "\r\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u006f\u005a\u004b\u009d\u00a1\u001f\u0004\u00ff" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00da\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0097\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0063\u0068\u0065\u006d\u0061\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u0052\u006f\u0062" +
   "\u006f\u0074\u0050\u006f\u0073\u0069\u0074\u0069" +
   "\u006f\u006e\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0041\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0039\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0064\u0031\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0064\u0032\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0064\u0033\u0000\u0000\u0000\u0000" +
   "\u0062\u006c\u0075\u0065\u0031\u0000\u0000\u0000" +
   "\u0062\u006c\u0075\u0065\u0032\u0000\u0000\u0000" +
   "\u0062\u006c\u0075\u0065\u0033\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_fcb71e38a70d3910 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0010\u0039\r\u00a7\u0038\u001e\u00b7\u00fc" +
   "\r\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u006f\u005a\u004b\u009d\u00a1\u001f\u0004\u00ff" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0063\u0068\u0065\u006d\u0061\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u004d\u0061\u0074" +
   "\u0063\u0068\u0041\u006e\u0064\u0050\u006f\u0073" +
   "\u0069\u0074\u0069\u006f\u006e\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006d\u0061\u0074\u0063\u0068\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0036\u007f\u00d9\u00b5\u0087\u0076\u0096\u00e6" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_db6aa7ecdb8f85bb =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00bb\u0085\u008f\u00db\u00ec\u00a7\u006a\u00db" +
   "\r\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u006f\u005a\u004b\u009d\u00a1\u001f\u0004\u00ff" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00c2\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0063\u0068\u0065\u006d\u0061\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u004d\u0061\u0079" +
   "\u0062\u0065\u0045\u0072\u0072\u006f\u0072\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006d\u0065\u0073\u0073\u0061\u0067\u0065\u0049" +
   "\u0066\u0045\u0072\u0072\u006f\u0072\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
}
}

